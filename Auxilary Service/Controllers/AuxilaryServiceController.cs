using System.Text.Json;
using Microsoft.AspNetCore.Mvc;

namespace Auxilary_Service.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class AuxilaryServiceController : ControllerBase
    {

        private readonly HttpClient _httpClient;
        private readonly string baseAPIUrl = "https://localhost:7130";

        // Inject HttpClient through the constructor
        public AuxilaryServiceController(HttpClient httpClient)
        {
            _httpClient = httpClient;
        }

        /// <summary>
        /// This end point is generating thumbnail by video Id, in this service we are just mocking the thumbnail generation but link we provide for
        /// thumbnail end point is valid and return correct thumbnail that are already being generated by third party service
        /// </summary>
        /// <param name="videoId"></param>
        /// <returns></returns>
        [HttpGet]
        public async Task<IActionResult> GenerateThumbnailById(string videoId)
        {
            try
            {
                HttpResponseMessage response = await _httpClient.GetAsync($"{baseAPIUrl}/video/{videoId}");
                response.EnsureSuccessStatusCode();

                string responseBody = await response.Content.ReadAsStringAsync();

                // Deserialize the JSON string to extract the 'data' part
                using (JsonDocument doc = JsonDocument.Parse(responseBody))
                {
                    JsonElement dataElement = doc.RootElement.GetProperty("data");
                    var dataJson = dataElement.GetRawText();

                    // Deserialize 'dataJson' to VideosDto object
                    VideosDto? videoData = JsonSerializer.Deserialize<VideosDto>(dataJson, new JsonSerializerOptions
                    {
                        PropertyNameCaseInsensitive = true
                    });

                    // thumbnail is added in videoDto after being generated by third party service Bunny
                    if (videoData != null)
                    {
                        videoData.thumbnailUrl =
                            $"https://vz-6258ec42-3d0.b-cdn.net/{videoData.VideoId}/thumbnail.jpg";

                        return Ok(videoData);
                    }

                    return NotFound("No Resource Found");
                }

            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                throw;
            }

        }
    }
}
